% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/database.R
\name{ed_db_delete}
\alias{ed_db_delete}
\title{#' Check the online EIDITH database for updates since your last download.
#'
#' This function checks to see if the EIDITH online database has been updated
#' since the last time \code{\link[=ed_db_download]{ed_db_download()}} was run. If it has, you may run
#' \code{\link[=ed_db_download]{ed_db_download()}} to get the latest data.
#'
#' @param path if provided, the filename of the sqlite database to check. By default,
#'   the function checks the status of the internal database or that with the global option \code{"ed_sql_path"}.
#' @return A named vector, showing TRUE for tables that have been updated.  A message is also printed.
#' @seealso  \code{\link[=ed_db_status]{ed_db_status()}}, \code{\link[=ed_db_download]{ed_db_download()}},  \code{\link[=ed_db_export]{ed_db_export()}}
#' @importFrom stringi stri_replace_first_fixed
#' @importFrom dplyr collect tbl
#' @export
ed_db_updates <- function(path = NULL) {    # NEEDS TO BE RE-WORKED
last_download <- stri_replace_first_fixed(
collect(tbl(eidith_db(path), "status"))$last_download,
" ", "T")
auth <- ed_auth()
check_at <- p1_api_endpoints()\link{p1_api_endpoints() !="TestIDSpecimenID"}
new_rows <- lapply(check_at, function(endpoint) {
newdat <- ed_get(endpoint = endpoint, verbose = FALSE,
lmdate_from = last_download, postprocess = FALSE, auth = auth)
nrow(newdat)
})
is_new_data <- as.logical(unlist(new_rows))
names(is_new_data) <- check_at
if(all(!is_new_data)) {
message("No new data since ", last_download, ".")
} else {
message("New data at endpoints: [",
paste0(check_at[is_new_data], collapse=","),
"]. Use ed_db_download() to update.")
}
return(is_new_data)
}
Delete the local EIDITH database

[",
paste0(check_at[is_new_data]: R:%22,%0A%20%20%20%20%20%20%20%20%20%20%20%20paste0(check_at[is_new_data}
\usage{
ed_db_delete(path = NULL)
}
\arguments{
\item{path}{Path to locate the database if it is not in its default location.}
}
\description{
This function allows you to delete the local SQLite EIDITH database.
}
